The GPIO alternate function high register (GPIOx_AFRH) is part of the GPIO peripheral in microcontrollers, typically used in ARM Cortex-M based systems. It is used to configure alternate functions 
for the higher GPIO pins (usually pin 8 to 15) of a specific GPIO port. Each pin has a corresponding 4-bit field in the register, allowing you to select one of the alternate functions available for that pin.
This register is used when a pin is configured to operate in alternate function mode rather than general purpose input/output mode
Certainly! In microcontrollers with ARM Cortex-M based cores, such as STM32 microcontrollers, GPIO pins often have multiple functions beyond just being simple input/output pins.
These additional functions can include things like UART communication, SPI communication, I2C communication, PWM output, and more.

The GPIO alternate function registers (AFRs) are used to configure these alternate functions for GPIO pins. 
In STM32 microcontrollers, these registers are typically divided into two parts: AFRH (alternate function high) and AFRL (alternate function low). 
AFRH is used to configure alternate functions for GPIO pins with higher numbers (usually pin 8 to 15), while AFRL is used for lower numbered pins (usually pin 0 to 7).

The AFRH register typically consists of 32 bits, with each 4-bit field corresponding to a GPIO pin. Each field can be set to a value that selects one of the alternate functions available for that pin. 
The specific values to select the alternate function are defined in the microcontroller's datasheet and reference manual.

Here's a general step-by-step guide on how to use the AFRH register:

1. Identify the GPIO pin(s) you want to configure for alternate functions.
2. Determine which alternate function you want to use for each pin.
3. Calculate the appropriate bit shift and mask for each pin's 4-bit field within the AFRH register.
4. Write the desired alternate function value to the corresponding field in the AFRH register.

For example, let's say we want to configure pin 10 of GPIO port A to function as an alternate function for USART communication. We would:
- Identify that pin 10 corresponds to bit positions 8-11 in the AFRH register.
- Determine the value that corresponds to USART functionality.
- Calculate the appropriate bit shift and mask to write this value to the AFRH register.

It's important to consult the datasheet and reference manual of the specific microcontroller you're working with to understand the available alternate functions and their corresponding values in the AFRH register.
Additionally, it's crucial to configure other GPIO registers properly (like the GPIO mode register) to ensure the pin operates in the desired mode.
